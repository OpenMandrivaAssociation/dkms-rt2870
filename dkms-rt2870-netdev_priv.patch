--- 2008_0925_RT2870_Linux_STA_v1.4.0.0/os/linux/rt_main_dev.c.ori	2009-03-03 19:08:53.000000000 +0100
+++ 2008_0925_RT2870_Linux_STA_v1.4.0.0/os/linux/rt_main_dev.c	2009-03-03 19:08:57.000000000 +0100
@@ -125,7 +125,7 @@
 */
 int MainVirtualIF_close(IN struct net_device *net_dev)
 {
-    RTMP_ADAPTER *pAd = net_dev->priv;
+    RTMP_ADAPTER *pAd = net_dev->ml_priv;
 
 	// Sanity check for pAd
 	if (pAd == NULL)
@@ -165,7 +165,7 @@
 */
 int MainVirtualIF_open(IN struct net_device *net_dev)
 {
-    RTMP_ADAPTER *pAd = net_dev->priv;
+    RTMP_ADAPTER *pAd = net_dev->ml_priv;
 
 	// Sanity check for pAd
 	if (pAd == NULL)
@@ -207,7 +207,7 @@
 int rt28xx_close(IN PNET_DEV dev)
 {
 	struct net_device * net_dev = (struct net_device *)dev;
-    RTMP_ADAPTER	*pAd = net_dev->priv;
+    RTMP_ADAPTER	*pAd = net_dev->ml_priv;
 	BOOLEAN 		Cancelled = FALSE;
 	UINT32			i = 0;
 #ifdef RT2870
@@ -416,7 +416,7 @@
 
 static int rt28xx_init(IN struct net_device *net_dev)
 {
-	PRTMP_ADAPTER 			pAd = (PRTMP_ADAPTER)net_dev->priv;
+	PRTMP_ADAPTER 			pAd = (PRTMP_ADAPTER)net_dev->ml_priv;
 	UINT					index;
 	UCHAR					TmpPhy;
 	NDIS_STATUS				Status;
@@ -689,7 +689,7 @@
 	RT28XX_IRQ_RELEASE(net_dev);
 
 	// shall not set priv to NULL here because the priv didn't been free yet.
-	//net_dev->priv = 0;
+	//net_dev->ml_priv = 0;
 #ifdef INF_AMAZON_SE
 err0:
 #endif // INF_AMAZON_SE //
@@ -716,7 +716,7 @@
 int rt28xx_open(IN PNET_DEV dev)
 {				 
 	struct net_device * net_dev = (struct net_device *)dev;
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)net_dev->priv;
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)net_dev->ml_priv;
 	int retval = 0;
  	POS_COOKIE pObj;
 
@@ -725,7 +725,7 @@
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -1;
 	}
 
@@ -1416,7 +1416,7 @@
 	if (status != NDIS_STATUS_SUCCESS) 
 		goto err_out_free_netdev;
 
-	net_dev->priv = (PVOID)pAd;
+	net_dev->ml_priv = (PVOID)pAd;
     pAd->net_dev = net_dev; // must be before RT28XXNetDevInit()
 
 	RT28XXNetDevInit(_dev_p, net_dev, pAd);
@@ -1517,7 +1517,7 @@
 int rt28xx_packet_xmit(struct sk_buff *skb)
 {
 	struct net_device *net_dev = skb->dev;
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->priv;
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->ml_priv;
 	int status = 0;
 	PNDIS_PACKET pPacket = (PNDIS_PACKET) skb;
 
@@ -1605,7 +1605,7 @@
 	IN struct sk_buff 		*skb_p, 
 	IN struct net_device 	*net_dev)
 {
-    RTMP_ADAPTER *pAd = net_dev->priv;
+    RTMP_ADAPTER *pAd = net_dev->ml_priv;
 
 	if (!(net_dev->flags & IFF_UP))
 	{
@@ -1717,7 +1717,7 @@
 struct iw_statistics *rt28xx_get_wireless_stats(
     IN struct net_device *net_dev)
 {
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->priv;
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->ml_priv;
 
 
 	DBGPRINT(RT_DEBUG_TRACE, ("rt28xx_get_wireless_stats --->\n"));
@@ -1769,18 +1769,18 @@
 
 	if (net_dev->priv_flags == INT_MAIN)
 	{
-		pAd = net_dev->priv;
+		pAd = net_dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = net_dev->priv;
-		pAd = pVirtualAd->RtmpDev->priv;
+		pVirtualAd = net_dev->ml_priv;
+		pAd = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1817,7 +1817,7 @@
     RTMP_ADAPTER *pAd = NULL;
 
 	if (net_dev)
-		pAd = net_dev->priv;
+		pAd = net_dev->ml_priv;
 
 	if (pAd)
 	{
--- 2008_0925_RT2870_Linux_STA_v1.4.0.0/os/linux/sta_ioctl.c.netdev_priv	2008-09-25 10:28:00.000000000 +0200
+++ 2008_0925_RT2870_Linux_STA_v1.4.0.0/os/linux/sta_ioctl.c	2009-03-03 19:28:07.000000000 +0100
@@ -580,7 +580,7 @@
 		   struct iw_request_info *info,
 		   char *name, char *extra)
 {
-//	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+//	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 #ifdef RT2870
 	strncpy(name, "RT2870 Wireless", IFNAMSIZ);
@@ -592,7 +592,7 @@
 			struct iw_request_info *info,
 			struct iw_freq *freq, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	int 	chan = -1;
 
     //check if the interface is down
@@ -632,19 +632,19 @@
 
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -662,7 +662,7 @@
 		   struct iw_request_info *info,
 		   __u32 *mode, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	//check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -704,19 +704,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -741,7 +741,7 @@
 		   struct iw_request_info *info,
 		   char *name, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	//check if the interface is down
     	if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -772,19 +772,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -866,7 +866,7 @@
 		      struct iw_request_info *info,
 		      struct sockaddr *ap_addr, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
     NDIS_802_11_MAC_ADDRESS Bssid;
 
 	//check if the interface is down
@@ -911,19 +911,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -993,7 +993,7 @@
 			struct iw_request_info *info,
 			struct iw_point *data, char *extra)
 {
- 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+ 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	struct sockaddr addr[IW_MAX_AP];
 	struct iw_quality qual[IW_MAX_AP];
@@ -1029,7 +1029,7 @@
 			struct iw_request_info *info,
 			struct iw_point *data, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	ULONG								Now;
 	int Status = NDIS_STATUS_SUCCESS;
@@ -1111,7 +1111,7 @@
 			struct iw_point *data, char *extra)
 {
 
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	int i=0;
 	char *current_ev = extra, *previous_ev = extra;
 	char *end_buf;
@@ -1400,7 +1400,7 @@
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *essid)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	//check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1446,19 +1446,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 	
@@ -1499,7 +1499,7 @@
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *nickname)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
     //check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1527,19 +1527,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1556,7 +1556,7 @@
 		       struct iw_request_info *info,
 		       struct iw_param *rts, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	u16 val;
 
     //check if the interface is down
@@ -1590,19 +1590,19 @@
 
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1624,7 +1624,7 @@
 			struct iw_request_info *info,
 			struct iw_param *frag, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	u16 val;
 
 	//check if the interface is down
@@ -1656,19 +1656,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1692,7 +1692,7 @@
 			  struct iw_request_info *info,
 			  struct iw_point *erq, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 	//check if the interface is down
     	if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1800,19 +1800,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
+		pVirtualAd = dev->ml_priv;
 		if (pVirtualAd && pVirtualAd->RtmpDev)
-			pAdapter = pVirtualAd->RtmpDev->priv;
+			pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1880,19 +1880,19 @@
 	
 	if (dev->priv_flags == INT_MAIN)
 	{
-		pAdapter = dev->priv;
+		pAdapter = dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = dev->priv;
-		pAdapter = pVirtualAd->RtmpDev->priv;
+		pVirtualAd = dev->ml_priv;
+		pAdapter = netdev_priv(pVirtualAd->RtmpDev);
 	}
 	pObj = (POS_COOKIE) pAdapter->OS_Cookie;
 
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -1948,7 +1948,7 @@
 		struct iw_point *wrq, char *extra)
 {
 	INT				Status = 0;
-    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
 
     if (extra == NULL)
     {
@@ -2075,18 +2075,18 @@
     u32             subcmd = wrq->flags;
 
 	if (dev->priv_flags == INT_MAIN)
-		pAd = dev->priv;
+		pAd = dev->ml_priv;
 	else
 	{
-		pVirtualAd = dev->priv;
-		pAd = pVirtualAd->RtmpDev->priv;
+		pVirtualAd = dev->ml_priv;
+		pAd = netdev_priv(pVirtualAd->RtmpDev);
 	}
 	pObj = (POS_COOKIE) pAd->OS_Cookie;
 
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
@@ -2237,7 +2237,7 @@
 			   union iwreq_data *wrqu,
 			   char *extra)
 {
-	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
 	struct iw_mlme *pMlme = (struct iw_mlme *)wrqu->data.pointer;
 	MLME_QUEUE_ELEM				MsgElem;
 	MLME_DISASSOC_REQ_STRUCT	DisAssocReq;
@@ -2294,7 +2294,7 @@
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
-	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	struct iw_param *param = &wrqu->param;
 
     //check if the interface is down
@@ -2447,7 +2447,7 @@
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
-	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	struct iw_param *param = &wrqu->param;
 
     //check if the interface is down
@@ -2521,7 +2521,7 @@
 			   union iwreq_data *wrqu,
 			   char *extra)
 			{
-    PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 	struct iw_point *encoding = &wrqu->encoding;
 	struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
     int keyIdx, alg = ext->alg;
@@ -2649,7 +2649,7 @@
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) dev->ml_priv;
 	PCHAR pKey = NULL;
 	struct iw_point *encoding = &wrqu->encoding;
 	struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
@@ -2733,7 +2733,7 @@
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
-	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
 	
 	if (wrqu->data.length > MAX_LEN_OF_RSNIE ||
 	    (wrqu->data.length && extra == NULL))
@@ -2758,7 +2758,7 @@
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
-	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
 	
 	if ((pAd->StaCfg.RSNIE_Len == 0) ||
 		(pAd->StaCfg.AuthMode < Ndis802_11AuthModeWPA))
@@ -2804,7 +2804,7 @@
 			   union iwreq_data *wrqu,
 			   char *extra)
 {
-	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
 	struct iw_pmksa *pPmksa = (struct iw_pmksa *)wrqu->data.pointer;
 	INT	CachedIdx = 0, idx = 0;
 
@@ -2888,7 +2888,7 @@
 	UINT32				bbpValue;
 	BOOLEAN				bIsPrintAllBBP = FALSE;
 	INT					Status = 0;
-    PRTMP_ADAPTER       pAdapter = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER       pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
 
 
 	memset(extra, 0x00, IW_PRIV_SIZE_MASK);
@@ -3015,7 +3015,7 @@
 			struct iw_request_info *info,
 			union iwreq_data *wrqu, char *extra)
 {
-    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
     UINT32          rate = wrqu->bitrate.value, fixed = wrqu->bitrate.fixed;
 
     //check if the interface is down
@@ -3073,7 +3073,7 @@
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
-    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
     int rate_index = 0, rate_count = 0;
     HTTRANSMIT_SETTING ht_setting; 
     __s32 ralinkrate[] =
@@ -5483,19 +5483,19 @@
 
 	if (net_dev->priv_flags == INT_MAIN)
 	{
-		pAd = net_dev->priv;
+		pAd = net_dev->ml_priv;
 	}
 	else
 	{
-		pVirtualAd = net_dev->priv;
-		pAd = pVirtualAd->RtmpDev->priv;
+		pVirtualAd = net_dev->ml_priv;
+		pAd = netdev_priv(pVirtualAd->RtmpDev);
 	}
 	pObj = (POS_COOKIE) pAd->OS_Cookie;
 
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
-		   So the net_dev->priv will be NULL in 2rd open */
+		   So the net_dev->ml_priv will be NULL in 2rd open */
 		return -ENETDOWN;
 	}
 
--- 2008_0925_RT2870_Linux_STA_v1.4.0.0/common/2870_rtmp_init.c~	2008-09-19 04:59:12.000000000 +0200
+++ 2008_0925_RT2870_Linux_STA_v1.4.0.0/common/2870_rtmp_init.c	2009-03-03 19:32:52.000000000 +0100
@@ -763,7 +763,7 @@
 NDIS_STATUS	 CreateThreads( 
 	IN	struct net_device *net_dev)
 {
-	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->priv;
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) net_dev->ml_priv;
 	POS_COOKIE pObj = (POS_COOKIE) pAd->OS_Cookie;
 	pid_t pid_number = -1;
 	
